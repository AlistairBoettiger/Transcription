
%                               model_CompFull2.m
%
% Alistair Boettiger                                   Date Begun: 04/06/09
% Levine Lab                                     Functional Since: 05/05/09
% Functional computational code                     Last Modified: 10/18/09

% Notes:
% compute moment generating function of first passage times for arbitrary
% pinch point decomposed (series) Markov Chains using Matlab's symbolic
% Algebra routines

% Modified 10/18/09 to remove state 0.  


clear all;
% 
% Specific Model Constants
kab = sym('kab','real');
kba = sym('kba','real');
% k01 = sym('k01','real'); 
% k10 = sym('k10','real'); 
k12 = sym('k12','real'); 
k21 = sym('k21','real'); 
k23 = sym('k23','real'); 
k24 = sym('k24','real'); 
k32 = sym('k32','real'); 
k35 = sym('k35','real'); 
k42 = sym('k42','real'); 
k45 = sym('k45','real'); 
k56 = sym('k56','real'); 
k65 = sym('k65','real'); 
k67 = sym('k67','real'); 
k78 = sym('k78','real'); 


Gen =  [[-kab,kab];  % enhancer chain
       [kba,-kba]];


% Submatrices for initiation regulated system
GI{1} = zeros(3); 

        
% GI{2}=[[-kab,kab,0,0];
%     [kba,-k01-kba, k01, 0];
%     [0,k10, -k10-k12, k12];
%     [0,0, k21, -k21]];

GI{2}=[[-kab,kab,0];
    [kba, -kba-k12, k12];
    [0, k21, -k21]];

GI{3}=[[-k23-k24, k23, k24, 0];
    [k32, -k32-k35, 0, k35];
    [k42, 0, -k42-k45, k45];
    [0, k35, k45, -k35-k45]];

GI{4} =[[-k56, k56, 0, 0];
    [k65, -k65-k67, k67, 0];
    [0, 0, -k78, k78];
    [0, 0, 0, 0]];

 [m1I,m2I] = SeriesDecomp(GI); 

% Submatrices for elongation regulated system 
GE{1} = zeros(3); 

% GE{2}=[[-k01, k01, 0];
%     [k10, -k10-k12, k12];
%     [0, k21, -k21]];

GE{2}=[[-k12, k12];
       [k21, -k21]];


GE{3}=[[-k23-k24, k23, k24, 0];
    [k32, -k32-k35, 0, k35];
    [k42, 0, -k42-k45, k45];
    [0, k35, k45, -k35-k45]];

GE{4}=[[-k56, k56, 0, 0];
    [k65, -k65-k67, k67, 0];
    [0, 0, -k78, k78];
    [0,0,0,0]]; % kab kba integrated below

% GE{4}=[[-k56, k56, 0, 0,0];
%     [k65, -k65-k67, k67, 0,0];
%     [0, 0, -k78, k78,0];
%     [0, 0, 0,-kab,kab];
%     [0,0,0,0,0]];

 [m1Et,m2Et] = SeriesDecomp(GE); % means without enhnacer yet
%    

syms lambda;
f = length(Gen);
Gen_star = Gen; 
Gen_star(f,:) = zeros(1,f); 
iGen = inv(lambda*eye(f) - Gen_star);
mS = -subs(diff(lambda*iGen(1,f),lambda),lambda,0); % mean for enhancer chain 
m2S = subs(diff(diff(lambda*iGen(1,f),lambda),lambda),lambda,0); % 2nd moment for enhancer chain 

p = kba/(kab+kba); % probability of find ing the system in the final state
% should be computed directly from the final element of the kernel of the
% matrix Gen.  Matlab refuses to compute kernel through left divide.  
m1E = m1Et + mS*(1-p);
m2E = m2Et + (1-p)*(2*m1Et*mS+m2S); 

% vars = [k01,k10,k12,k21,k23,k24,k32,k35,k42,k45,k56,k65,k67,k78,kab,kba];
% vals = [ 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ,.1 , 1 ];

vars = [k12,k21,k23,k24,k32,k35,k42,k45,k56,k65,k67,k78,kab,kba];
vals = [ 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ,.1 , 1 ];

 grad_mE = jacobian(m1E,vars);
 grad_sE = jacobian(m2E-m1E^2,vars);
 grad_mI = jacobian(m1I,vars);
 grad_sI = jacobian(m2I-m1I^2,vars);
 grad_nE = jacobian((m2E-m1E^2)/m1E^2,vars);
 grad_nI = jacobian((m2I-m1I^2)/m1I^2,vars);
 
 
% % Print solutions 
 
%  fid = fopen('modelFull_solns.txt', 'wt');
% fprintf(fid, ['m1E = ', char(m1E), '\n', '  \n',...
%     'm2E = ', char(m2E), '\n', '  \n',...
%     'm1I = ', char(m1I), '\n', '  \n',...
%     'm2I = ', char(m2I), '\n', '  \n',...
%     'grad_mE = ', char(grad_mE), '\n', '  \n',...
%     'grad_mI = ', char(grad_mI), '\n', '  \n',...    
%     ]  );
% fclose(fid);

% convert solutions in symbolic expression to matlab commands with
% variables for inputs.  This is much faster than 'subs' command, sadly. 

solns = {char(m1E); char(m2E); char(m1I); char(m2I); ...
    char(grad_mE); char(grad_sE); char(grad_nE); char(grad_mI); char(grad_sI); char(grad_nI)};
for k =1:length(solns) 
    solns{k}(strfind(solns{k},'k'))='K';
    % remove text 'matrix' from beginning of character matrices
    try % this will only work if the statement begins with 'matrix(
    solns{k}(strfind(solns{k},'matrix('):7)='       ';
    catch
    end
    if solns{k}(end)==')' % remove terminal parenthesis 
         solns{k}(end)=' ';
     end
end


P = length(vars); 
M1E = zeros(N,1); M2E = M1E; M1I = M1E; M2I = M1E; 
GmE = zeros(N,P); GsE = GmE; GnE = GmE; GmI = GmE; GsI = GmE; GnI = GmE; 

for i=1:N
 K12 = f*rand; K23 = f*rand; K24 = f*rand;  K35 = f*rand;  K45 = f*rand;
 K56 = f*rand; K67 = f*rand; K78 = f*rand;     Kab = rand; Kba = rand;
 K21 = b*rand; K32 = b*rand; K42 = b*rand; K65 = b*rand;
M1E(i) = eval(solns{1});
M2E(i) = eval(solns{2});
M1I(i) = eval(solns{3});
M2I(i) = eval(solns{4});
 GmE(i,:) = eval(solns{5});
GsE(i,:) = eval(solns{6});
GnE(i,:) = eval(solns{7});
GmI(i,:) = eval(solns{8});
GsI(i,:) = eval(solns{9});
GnI(i,:) = eval(solns{10});
end

 % grad_dm = jacobian(m1E-m1I,vars);
% grad_ds = jacobian((m2E-m1E^2)-(m2I-m1I^2),vars);
 % grad_dn = jacobian(((m2E-m1E^2)/m1E^2-(m2I-m1I^2)/m1I^2),vars);
 
%  subs(((m2E-m1E^2)/m1E^2-(m2I-m1I^2)/m1I^2),{vars},{vals})
 
% % compute mean and variance of time to first expression 
%  m1Ev = subs(m1E,{vars},{vals})
%  m2Ev = subs(m2E,{vars},{vals})
%  m1Iv = subs(m1I,{vars},{vals})
%  m2Iv = subs(m2I,{vars},{vals})
% 
% 
% sE = m2En - m1En^2;
% sI = m2In - m1In^2;
% nE = sE/m1En^2;
% nI = sI/m1In^2;
% nE2 = sE/m1En^3;
% nI2 = sI/m1In^3;


% 
% 
% N = 1000;
% dmv = zeros(N,1); 
% dsv = zeros(N,1);
% dnv = zeros(N,1);
% dn2 = zeros(N,1); 
% m1En = zeros(N,1);
% m1In = zeros(N,1);
% m2En = zeros(N,1); 
% m2In= zeros(N,1);
% sI =zeros(N,1);   
% nE = zeros(N,1); 
% nI = zeros(N,1); 
% nE2 =zeros(N,1); 
% nI2 = zeros(N,1); 
% pars = zeros(N,5);
% 
% 
% for i=1:N
%     f=1; b=1;
%  K01 = f*rand; K12 = f*rand; K23 = f*rand; K24 = f*rand;  K35 = f*rand;  K45 = f*rand;
%  K56 = f*rand; K67 = f*rand; K78 = f*rand;     Kab = rand; Kba = rand;
%  K10 = b*rand;  K21 = b*rand; K32 = b*rand; K42 = b*rand; K65 = b*rand;
%  
% %  % Assuming elongation regulated chain always reaches paused state when
% %  % enhancer is in empty state.  
% % m1En = 1/(K35 + K45 + K56) + 1/(K10 + K12) + 1/K01 + (Kab*(K65 + K67)*(K67/(Kab*(K65 + K67)^2) + K67/(Kab^2*(K65 + K67)) + K67/(K78*Kab*(K65 + K67))))/K67 - ((K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*(K12/(K10 + K12) - 1))/K12 - (((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) + ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45); 
% % m2En = 2/(K35 + K45 + K56)^2 + 2/(K10 + K12)^2 + 2/(K01*(K10 + K12)) - 2*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(1/(K10 + K12) + 1/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)) + 2/K01^2 - 2*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(1/(K35 + K45 + K56) + (Kab*(K65 + K67)*(K67/(Kab*(K65 + K67)^2) + K67/(Kab^2*(K65 + K67)) + K67/(K78*Kab*(K65 + K67))))/K67) + 2*(1/(K35 + K45 + K56) + (Kab*(K65 + K67)*(K67/(Kab*(K65 + K67)^2) + K67/(Kab^2*(K65 + K67)) + K67/(K78*Kab*(K65 + K67))))/K67)*(1/(K10 + K12) + 1/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)) + (2*Kab*(K65 + K67)*((K67/(Kab*(K65 + K67)^2) + K67/(Kab^2*(K65 + K67)) + K67/(K78*Kab*(K65 + K67)))/(K65 + K67) + K67/(Kab^3*(K65 + K67)) + (K67*(1/Kab^2 + 1/(K78*Kab)))/(K78*(K65 + K67))))/K67 + ((K10 + K12)*(K12/(K10 + K12) - 1)*((2*K10)/((K10 + K12)^3*(K12/(K10 + K12) - 1)) - 2/K01^2 + (2*K10)/(K01*(K10 + K12)^2*(K12/(K10 + K12) - 1))))/K12 + (2*(K10 + K12)^2*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))^2*(K12/(K10 + K12) - 1)^2)/K12^2 + (2*Kab*(K65 + K67)*(K67/(Kab*(K65 + K67)^2) + K67/(Kab^2*(K65 + K67)) + K67/(K78*Kab*(K65 + K67))))/(K67*(K35 + K45 + K56)) + (2*(K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(K12/(K10 + K12) - 1))/K12 - (2*(K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*(K12/(K10 + K12) - 1)*(1/(K10 + K12) + 1/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)))/K12 - (2*(K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*(K12/(K10 + K12) - 1)*(1/(K35 + K45 + K56) + (Kab*(K65 + K67)*(K67/(Kab*(K65 + K67)^2) + K67/(Kab^2*(K65 + K67)) + K67/(K78*Kab*(K65 + K67))))/K67))/K12 + ((K32 + K35)*(K42 + K45)*((((2*K23*K32)/((K23 + K24)*(K32 + K35)^3*(K35/(K32 + K35) - 1)) + (2*K24*K42)/((K23 + K24)*(K42 + K45)^3*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (2*K21)/((K10 + K12)^2*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) - 2/(K21 + K23 + K24)^2 + (2*(((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24))))/(((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24))*(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - (((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(K35 + K45 + K56)*(2/(K35 + K45 + K56)^2 + (((2*K35)/((K32 + K35)^2*(K35 + K45)) + (2*K45)/((K35 + K45)*(K42 + K45)^2))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (2*K56*K65)/((K65 + K67)^3*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (2*((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56))))/((K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56)))*(K35 + K45 + K56))))/(K56*K67) + ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(K21 + K23 + K24)*(2/(K21 + K23 + K24)^2 + ((2*K23)/((K23 + K24)*(K32 + K35)) + (2*K24)/((K23 + K24)*(K42 + K45)))/(K21 + K23 + K24) + (2*K23)/((K23 + K24)*(K32 + K35)^2) + (2*K24)/((K23 + K24)*(K42 + K45)^2)))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) + (2*((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(K35 + K45 + K56))/(K56*K67) - (2*(K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*(1/(K10 + K12) + 1/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45);
% % m1In = 1/(K35 + K45 + K56) + 1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67 - ((1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba))/(K01*K12) - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - (((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) + ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45);
% % m2In = 2/(K35 + K45 + K56)^2 - 2*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)) + 2/Kab^2 - 2*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67) + 2*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67)*(1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)) + (2*((((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba) + (K01*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba))*(K01*K12 + K10*Kba + K12*Kba))/K01 + (2*((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/(K01*Kab) + (2*K78*((K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67)))/(K65 + K67) + K67/(K78^3*(K65 + K67)))*(K65 + K67))/K67 + (2*K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/(K67*(K35 + K45 + K56)) + (2*(1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))^2*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)^2*(K01*K12 + K10*Kba + K12*Kba)^2)/(K01^2*K12^2) + (((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba)*((2*Kba*(((K10 + K12)*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba) + (K01*((K10*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K10*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba)))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1) - 2/Kab^2 + (2*Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/(Kab*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))))/(K01*K12) + (2*(1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba))/(K01*K12) - (2*(1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba)*(1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)))/(K01*K12) - (2*(1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67)*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba))/(K01*K12) + ((K32 + K35)*(K42 + K45)*(K21 + K23 + K24)*((((2*K23*K32)/((K23 + K24)*(K32 + K35)^3*(K35/(K32 + K35) - 1)) + (2*K24*K42)/((K23 + K24)*(K42 + K45)^3*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (2*K21*(((K01 + Kba)*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba) + (K10*((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba))*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) - 2/(K21 + K23 + K24)^2 + (2*(((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24))))/(((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24))*(K21 + K23 + K24)))*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - (((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(K35 + K45 + K56)*(2/(K35 + K45 + K56)^2 + (((2*K35)/((K32 + K35)^2*(K35 + K45)) + (2*K45)/((K35 + K45)*(K42 + K45)^2))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (2*K56*K65)/((K65 + K67)^3*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (2*((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56))))/((K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56)))*(K35 + K45 + K56))))/(K56*K67) + ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(K21 + K23 + K24)*(2/(K21 + K23 + K24)^2 + ((2*K23)/((K23 + K24)*(K32 + K35)) + (2*K24)/((K23 + K24)*(K42 + K45)))/(K21 + K23 + K24) + (2*K23)/((K23 + K24)*(K32 + K35)^2) + (2*K24)/((K23 + K24)*(K42 + K45)^2)))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) + (2*((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(K35 + K45 + K56))/(K56*K67) - (2*(K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*(1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45);
% 
% % % Starting the enhancer chain in its steady state distribution to avoid
% % conditioning on enhancer state.  
% m1In(i) = 1/(K35 + K45 + K56) + 1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67 - ((1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba))/(K01*K12) - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - (((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) + ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45);
% m2In(i) = 2/(K35 + K45 + K56)^2 - 2*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)) + 2/Kab^2 - 2*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67) + 2*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67)*(1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)) + (2*((((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba) + (K01*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba))*(K01*K12 + K10*Kba + K12*Kba))/K01 + (2*((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/(K01*Kab) + (2*K78*((K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67)))/(K65 + K67) + K67/(K78^3*(K65 + K67)))*(K65 + K67))/K67 + (2*K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/(K67*(K35 + K45 + K56)) + (2*(1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))^2*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)^2*(K01*K12 + K10*Kba + K12*Kba)^2)/(K01^2*K12^2) + (((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba)*((2*Kba*(((K10 + K12)*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba) + (K01*((K10*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K10*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba)))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1) - 2/Kab^2 + (2*Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/(Kab*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))))/(K01*K12) + (2*(1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba))/(K01*K12) - (2*(1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba)*(1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)))/(K01*K12) - (2*(1/Kab - (Kba*((K10 + K12)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1))*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67)*((K01*K12)/(K01*K12 + K10*Kba + K12*Kba) - 1)*(K01*K12 + K10*Kba + K12*Kba))/(K01*K12) + ((K32 + K35)*(K42 + K45)*(K21 + K23 + K24)*((((2*K23*K32)/((K23 + K24)*(K32 + K35)^3*(K35/(K32 + K35) - 1)) + (2*K24*K42)/((K23 + K24)*(K42 + K45)^3*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (2*K21*(((K01 + Kba)*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba) + (K10*((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2))/(K01*K12 + K10*Kba + K12*Kba))*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) - 2/(K21 + K23 + K24)^2 + (2*(((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24))))/(((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24))*(K21 + K23 + K24)))*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - (((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(K35 + K45 + K56)*(2/(K35 + K45 + K56)^2 + (((2*K35)/((K32 + K35)^2*(K35 + K45)) + (2*K45)/((K35 + K45)*(K42 + K45)^2))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (2*K56*K65)/((K65 + K67)^3*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (2*((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56))))/((K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56)))*(K35 + K45 + K56))))/(K56*K67) + ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(K21 + K23 + K24)*(2/(K21 + K23 + K24)^2 + ((2*K23)/((K23 + K24)*(K32 + K35)) + (2*K24)/((K23 + K24)*(K42 + K45)))/(K21 + K23 + K24) + (2*K23)/((K23 + K24)*(K32 + K35)^2) + (2*K24)/((K23 + K24)*(K42 + K45)^2)))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) + (2*((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(K35 + K45 + K56))/(K56*K67) - (2*(K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*(1/Kab + (((K01*(K10 + K12))/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*(K01 + Kba))/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (K21*((K01 + Kba)^2/(K01*K12 + K10*Kba + K12*Kba)^2 + (K01*K10)/(K01*K12 + K10*Kba + K12*Kba)^2)*(K01*K12 + K10*Kba + K12*Kba))/((K01 + Kba)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45);
% m1En(i) = 1/(K35 + K45 + K56) + 1/(K10 + K12) + 1/K01 - (Kba/(Kab + Kba) - 1)/Kab + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67 - ((K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*(K12/(K10 + K12) - 1))/K12 - (((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) + ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45);
% m2En(i) = 2/(K35 + K45 + K56)^2 - ((2/(K35 + K45 + K56) + 2/(K10 + K12) + 2/K01 + (2*K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67 - (2*(K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*(K12/(K10 + K12) - 1))/K12 - (2*((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) + (2*(K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - (2*(K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))/Kab + 2/Kab^2)*(Kba/(Kab + Kba) - 1) + 2/(K10 + K12)^2 + 2/(K01*(K10 + K12)) - 2*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(1/(K10 + K12) + 1/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)) + 2/K01^2 - 2*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67) + 2*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67)*(1/(K10 + K12) + 1/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)) + ((K10 + K12)*(K12/(K10 + K12) - 1)*((2*K10)/((K10 + K12)^3*(K12/(K10 + K12) - 1)) - 2/K01^2 + (2*K10)/(K01*(K10 + K12)^2*(K12/(K10 + K12) - 1))))/K12 + (2*(K10 + K12)^2*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))^2*(K12/(K10 + K12) - 1)^2)/K12^2 + (2*K78*((K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67)))/(K65 + K67) + K67/(K78^3*(K65 + K67)))*(K65 + K67))/K67 + (2*(K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(K12/(K10 + K12) - 1))/K12 - (2*(K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*(K12/(K10 + K12) - 1)*(1/(K10 + K12) + 1/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45)))/K12 + (2*K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/(K67*(K35 + K45 + K56)) - (2*(K10 + K12)*(1/K01 - K10/((K10 + K12)^2*(K12/(K10 + K12) - 1)))*(K12/(K10 + K12) - 1)*(1/(K35 + K45 + K56) + (K78*(K65 + K67)*(K67/(K78*(K65 + K67)^2) + K67/(K78^2*(K65 + K67))))/K67))/K12 + ((K32 + K35)*(K42 + K45)*((((2*K23*K32)/((K23 + K24)*(K32 + K35)^3*(K35/(K32 + K35) - 1)) + (2*K24*K42)/((K23 + K24)*(K42 + K45)^3*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + (2*K21)/((K10 + K12)^2*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) - 2/(K21 + K23 + K24)^2 + (2*(((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24))))/(((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24))*(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) - (((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(K35 + K45 + K56)*(2/(K35 + K45 + K56)^2 + (((2*K35)/((K32 + K35)^2*(K35 + K45)) + (2*K45)/((K35 + K45)*(K42 + K45)^2))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (2*K56*K65)/((K65 + K67)^3*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (2*((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56))))/((K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56)))*(K35 + K45 + K56))))/(K56*K67) + ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(K21 + K23 + K24)*(2/(K21 + K23 + K24)^2 + ((2*K23)/((K23 + K24)*(K32 + K35)) + (2*K24)/((K23 + K24)*(K42 + K45)))/(K21 + K23 + K24) + (2*K23)/((K23 + K24)*(K32 + K35)^2) + (2*K24)/((K23 + K24)*(K42 + K45)^2)))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45) + (2*((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*((((K56*K67)/((K65 + K67)*(K35 + K45 + K56)) - 1)*(K65 + K67)*(1/(K35 + K45 + K56) + ((K35/((K32 + K35)*(K35 + K45)) + K45/((K35 + K45)*(K42 + K45)))*(K45/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))) + (K56*K65)/((K65 + K67)^2*(K35 + K45 + K56)))/(K45/(K35 + K45 + K56) - (K56*(K67/(K65 + K67) - 1))/(K35 + K45 + K56) + (K35*K45)/((K42 + K45)*(K35 + K45 + K56))))*(K35 + K45 + K56))/(K56*K67) - ((K32 + K35)*(K42 + K45)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)))*(1/(K21 + K23 + K24) + K23/((K23 + K24)*(K32 + K35)) + K24/((K23 + K24)*(K42 + K45)))*(K21 + K23 + K24))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*(K35 + K45 + K56))/(K56*K67) - (2*(K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*(1/(K10 + K12) + 1/K01 - ((K32 + K35)*(K42 + K45)*(1/(K21 + K23 + K24) - (((K23*K32)/((K23 + K24)*(K32 + K35)^2*(K35/(K32 + K35) - 1)) + (K24*K42)/((K23 + K24)*(K42 + K45)^2*(K45/(K42 + K45) - 1)))*((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)) + K21/((K10 + K12)*(K21 + K23 + K24)))/((K23*(K35/(K32 + K35) - 1))/(K21 + K23 + K24) - K21/(K21 + K23 + K24) + (K24*(K45/(K42 + K45) - 1))/(K21 + K23 + K24)))*(K21 + K23 + K24)*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45))*((K23*K35)/((K32 + K35)*(K21 + K23 + K24)) + (K24*K45)/((K42 + K45)*(K21 + K23 + K24)) - 1))/(K23*K35*K42 + K24*K32*K45 + K23*K35*K45 + K24*K35*K45);
% 
% 
% sE(i) = m2En(i) - m1En(i)^2;
% sI(i) = m2In(i) - m1In(i)^2;
% nE(i) = sE(i)/m1En(i)^2;
% nI(i) = sI(i)/m1In(i)^2;
% nE2(i) = sE(i)/m1En(i)^3;
% nI2(i) = sI(i)/m1In(i)^3;
% 
% dmv(i) = m1In(i) - m1En(i);
% dsv(i) = sI(i) - sE(i);
% dnv(i) = nI(i) - nE(i);
% dn2(i) = nI2(i) - nE2(i);
% end;
% 
% 
% % 
% % %  % Plug in values
% % vars = [k01,k10,k12,k21,k23,k24,k32,k35,k42,k45,k56,k65,k67,k78,kab,kba];
% % vals = [ 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 ,1 , 1 ];
% % 
% % % compute mean and variance of time to first expression 
% % m1E = subs(m1bE,{vars},{vals})
% % m2E = subs(m2bE,{vars},{vals})
% 
% 
% % 
% % distribution of model differences in mean 
% am = sum(dmv>0)/N;
% dmp = log10(dmv);
% dmn = log10(-dmv(imag(dmp)>0));
% dmp(imag(dmp)>0) = NaN;
% 
% % distribution of model differences in variance
% as = sum(dsv>0)/N;
% dsp = log10(dsv);
% dsn = log10(-dsv(imag(dsp)>0));
% dsp(imag(dsp)>0) = NaN;
% 
% % distribution of model differences in noise
% an = sum(dnv>0)/N;
% dnp = log10(dnv);
% dnn = log10(-dnv(imag(dnp)>0));
% dnp(imag(dnp)>0) = NaN;
% 
% % % distribution of model differences in noise
% % an = sum(dn2>0)/N;
% % dnp = log10(dn2);
% % dnn = log10(-dn2(imag(dnp)>0));
% % dnp(imag(dnp)>0) = NaN;
% 
% figure(1); clf;
% subplot(3,1,1); 
% hist(dmp,20);  
% h = findobj(gca,'Type','patch'); hold on;  
% set(h,'FaceColor','r'); % alpha(.2); 
% hist(dmn,20,'b');
% xlabel('log_{10}(\mu_I-\mu_E)','FontSize',16); 
% legend(['\mu_I > \mu_E  ',num2str(100*am,3),' %'],...
%     ['\mu_I < \mu_E  ',num2str(100-100*am,3),' %'],'Location','Best');
% set(gca,'FontSize',16);
% title('Mean \tau','FontSize',16);
% 
% subplot(3,1,2); 
% hist(dsp,20); hold on; 
% h = findobj(gca,'Type','patch'); 
% set(h,'FaceColor','r');
% hist(dsn,20);
% xlabel('log_{10}(\sigma^2_I-\sigma^2_E)','FontSize',16);
% legend(['\sigma^2_I > \sigma^2_E  ',  num2str(100*as,3), ' %'],...
%     ['\sigma^2_I < \sigma^2_E  ', num2str(100-100*as,3), ' %'],'Location','Best');
% set(gca,'FontSize',16);
% title('Variance \tau','FontSize',16);
% 
% subplot(3,1,3); 
% hist(dnp,20); hold on; 
% h = findobj(gca,'Type','patch'); 
% set(h,'FaceColor','r');
% hist(dnn,20);
% xlabel('log_{10}(n_I-n_E)','FontSize',16);
% legend(['n_I > n_E  ',  num2str(100*an,3), ' %'],...
%     ['n_I < n_E  ', num2str(100-100*an,3), ' %'],'Location','Best');
% set(gca,'FontSize',16);
% title('Noise \tau','FontSize',16);
